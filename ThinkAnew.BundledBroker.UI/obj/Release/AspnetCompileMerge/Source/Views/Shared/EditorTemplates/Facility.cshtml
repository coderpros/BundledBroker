@model ThinkAnew.BundledBroker.UI.Models.FacilityViewModel

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @*
        <div class="editor center">
            @Html.Kendo().TextBoxFor(m => m.GroupName).Enable(false).HtmlAttributes(new { @class="form-control center", style = "width: 90%" })
        </div>
    *@
    <div class="editor-label">
        @Html.LabelFor(m => m.GroupName)
    </div>
    <div class="editor-field">
        @(Html.Kendo().DropDownListFor(m => m.GroupId)
              .BindTo(ViewData["Groups"] as SelectList)
              .DataTextField("Text")
              .DataValueField("Value")
        )
    </div>
    <div class="editor-label">
        @Model.City
        @Html.LabelFor(m => m.FacilityName)
    </div>
    <div class="editor-field">
        @Html.Kendo().TextBoxFor(m => m.FacilityName)
        @Html.ValidationMessageFor(m => m.FacilityName)
    </div>
    <div class="editor-label">
        @Html.LabelFor(m => m.FacilityCode)
    </div>
    <div class="editor-field">
        @Html.Kendo().TextBoxFor(m => m.FacilityCode)
        @Html.ValidationMessageFor(m => m.FacilityCode)
    </div>
    <div class="editor-label">
        @Html.LabelFor(m => m.City)
    </div>
    <div class="editor-field">
        @Html.Kendo().TextBoxFor(m => m.City)
        @Html.ValidationMessageFor(m => m.City)
    </div>
    <div class="editor-label">
        @Html.LabelFor(m => m.StateId)
    </div>
    <div class="editor-field">
        @(Html.Kendo().DropDownListFor(m => m.StateId)
            .BindTo(ViewData["States"] as SelectList)
            .DataTextField("Text")
            .DataValueField("Value")
            .Events(events =>
            {
                events.Change("StateId_OnChange");
            })
              //.DataSource(dataSource => dataSource
                  //.Read(read => read.Action("Groups_Read", "State"))
              //)
        )
    </div>
    <div class="editor-label">
        @Html.LabelFor(m => m.Postal)
    </div>
    <div class="editor-field">
        @Html.Kendo().MaskedTextBoxFor(m => m.Postal).Mask("#####")
        @Html.ValidationMessageFor(m => m.Postal)
    </div>
    <div class="editor-label">
        @Html.LabelFor(m => m.CountyId)
    </div>
    <div class="editor-field">
        @(Html.Kendo().DropDownListFor(m => m.CountyId)
            .BindTo(ViewData["Counties"] as SelectList)
            .DataTextField("Text")
            .DataValueField("Value")
        )
    </div>
    <div class="editor-label">
        &nbsp;
    </div>
    <div class="editor-field">
        @Html.Kendo().CheckBoxFor(m => m.FacilityIsActive)
    </div>
}

@*
        <div class="form-horizontal">
            <h4>@Model.GroupName</h4>
            @Html.LabelFor(m => m.GroupName)<br />
            @Html.TextBoxFor(m => m.GroupName)
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.FacilityId)

            <div class="form-group">
                @Html.LabelFor(model => model.GroupId, "GroupId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                @*
                    @Html.DropDownList("GroupId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.GroupId, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StateId, "StateId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                @*
                    @Html.DropDownList("StateId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FacilityCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FacilityCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FacilityCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FacilityName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FacilityName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FacilityName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Postal, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Postal, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Postal, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CountyId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CountyId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CountyId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FacilityIsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.FacilityIsActive)
                        @Html.ValidationMessageFor(model => model.FacilityIsActive, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
*@