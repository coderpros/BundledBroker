<script>
    function generateUserRolesTemplate(data) {
        var template = '';

        if (data != null) {
            for (var i = 0; i < data.length; i++) {
                template = template + data[i].RoleName;

                template += i < data.length - 1 ? ', ' : '';
            }
        }

        return template;
    }
</script>
@(Html.Kendo().Grid<ThinkAnew.BundledBroker.UI.Models.UserViewModel>()
      .Name("UserGrid")
      .Columns(columns =>
      {
          columns.Bound(c => c.FirstName);
          columns.Bound(c => c.LastName);
          columns.Bound(c => c.UserName1);
          columns.Bound(c => c.UserRoles)
            .Sortable(false)
            .Filterable(false)
            .ClientTemplate(@"#=generateUserRolesTemplate(UserRoles)#");
          columns.Command(command => { command.Edit(); command.Destroy(); }).Width(180);
      })
      .ToolBar(toolbar =>
      {
          toolbar.Create();
      })
      .ColumnMenu()
      .Editable(editable =>
      {
          editable.Mode(GridEditMode.PopUp)
          .TemplateName("User");
      })
      .Navigatable()
      .Selectable(selectable =>
      {
          selectable.Mode(GridSelectionMode.Multiple);
          selectable.Type(GridSelectionType.Row);
      })
      //.Events(events => events
      //.Edit("Facility_OnEdit")
      //)
      .Sortable(sortable =>
      {
          sortable.SortMode(GridSortMode.SingleColumn);
      })
      .ColumnMenu()
      .Groupable(x => x.Enabled(true).ShowFooter(true))
      .Reorderable(p => p.Columns(true))
      .Resizable(p => p.Columns(true))
      .Filterable()
      .DataSource(dataSource => dataSource
          .Ajax()
          .Model(model =>
          {
              model.Id(p => p.UserId);
          })
          .Read(read => read.Action("Users_Read", "User"))
          .Create(create => create.Action("Users_Create", "User"))
          .Update(update => update.Action("Users_Update", "User"))
          .Destroy(destroy => destroy.Action("Users_Destroy", "User"))
      )
)